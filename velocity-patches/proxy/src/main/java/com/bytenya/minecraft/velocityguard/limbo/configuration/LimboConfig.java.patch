diff --git a/proxy/src/main/java/com/bytenya/minecraft/velocityguard/limbo/configuration/LimboConfig.java b/proxy/src/main/java/com/bytenya/minecraft/velocityguard/limbo/configuration/LimboConfig.java
new file mode 100644
index 00000000..d6d698e7
--- /dev/null
+++ b/proxy/src/main/java/com/bytenya/minecraft/velocityguard/limbo/configuration/LimboConfig.java
@@ -0,0 +1,75 @@
+package com.bytenya.minecraft.velocityguard.limbo.configuration;
+
+import com.bytenya.minecraft.velocityguard.limbo.server.data.BossBar;
+import com.bytenya.minecraft.velocityguard.limbo.server.data.InfoForwarding;
+import com.bytenya.minecraft.velocityguard.limbo.server.data.PingData;
+import com.bytenya.minecraft.velocityguard.limbo.server.data.Title;
+
+import java.net.SocketAddress;
+
+public interface LimboConfig {
+    SocketAddress getAddress();
+
+    int getMaxPlayers();
+
+    PingData getPingData();
+
+    String getDimensionType();
+
+    int getGameMode();
+
+    InfoForwarding getInfoForwarding();
+
+    long getReadTimeout();
+
+    int getDebugLevel();
+
+    boolean isUseJoinMessage();
+
+    boolean isUseBossBar();
+
+    boolean isUseTitle();
+
+    boolean isUsePlayerList();
+
+    boolean isUseHeaderAndFooter();
+
+    String getJoinMessage();
+
+    BossBar getBossBar();
+
+    Title getTitle();
+
+    String getPlayerListUsername();
+
+    String getPlayerListHeader();
+
+    String getPlayerListFooter();
+
+    boolean isUseEpoll();
+
+    int getBossGroupSize();
+
+    int getWorkerGroupSize();
+
+    default boolean isUseTrafficLimits() {
+        return false;
+    }
+
+    default int getMaxPacketSize() {
+        return -1;
+    }
+
+    default int getMaxPacketsPerSec() {
+        return -1;
+    }
+
+    default int getMaxBytesPerSec() {
+        return -1;
+    }
+
+    double getInterval();
+
+    double getMaxPacketRate();
+
+}
