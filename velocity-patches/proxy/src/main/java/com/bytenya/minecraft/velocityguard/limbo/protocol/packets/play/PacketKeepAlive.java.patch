diff --git a/proxy/src/main/java/com/bytenya/minecraft/velocityguard/limbo/protocol/packets/play/PacketKeepAlive.java b/proxy/src/main/java/com/bytenya/minecraft/velocityguard/limbo/protocol/packets/play/PacketKeepAlive.java
new file mode 100644
index 00000000..575e995d
--- /dev/null
+++ b/proxy/src/main/java/com/bytenya/minecraft/velocityguard/limbo/protocol/packets/play/PacketKeepAlive.java
@@ -0,0 +1,62 @@
+/*
+ * Copyright (C) 2020 Nan1t
+ *
+ * This program is free software: you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation, either version 3 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program.  If not, see <https://www.gnu.org/licenses/>.
+ */
+
+package com.bytenya.minecraft.velocityguard.limbo.protocol.packets.play;
+
+import com.bytenya.minecraft.velocityguard.limbo.protocol.ByteMessage;
+import com.bytenya.minecraft.velocityguard.limbo.protocol.Packet;
+import com.bytenya.minecraft.velocityguard.limbo.protocol.registry.Version;
+
+public class PacketKeepAlive implements Packet {
+
+    private long id;
+
+    public long getId() {
+        return id;
+    }
+
+    public void setId(long id) {
+        this.id = id;
+    }
+
+    @Override
+    public void encode(ByteMessage msg, Version version) {
+        if (version.moreOrEqual(Version.V1_12_2)) {
+            msg.writeLong(id);
+        } else if (version.moreOrEqual(Version.V1_8)) {
+            msg.writeVarInt((int) id);
+        } else {
+            msg.writeInt((int) id);
+        }
+    }
+
+    @Override
+    public void decode(ByteMessage msg, Version version) {
+        if (version.moreOrEqual(Version.V1_12_2)) {
+            this.id = msg.readLong();
+        } else if (version.moreOrEqual(Version.V1_8)) {
+            this.id = msg.readVarInt();
+        } else {
+            this.id = msg.readInt();
+        }
+    }
+
+    @Override
+    public String toString() {
+        return getClass().getSimpleName();
+    }
+}
